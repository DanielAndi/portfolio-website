// NOTE This file is auto-generated by Contentlayer

import type { Markdown, MDX, ImageFieldData, IsoDateTimeString } from 'contentlayer2/core'
import * as Local from 'contentlayer2/source-files'

export { isType } from 'contentlayer2/client'

export type { Markdown, MDX, ImageFieldData, IsoDateTimeString }

/** Document types */
export type Project = {
  /** File path relative to `contentDirPath` */
  _id: string
  _raw: Local.RawDocumentData
  type: 'Project'
  /** The title of the project */
  title: string
  /** The slug of the project */
  slug: string
  /** A brief summary of the project */
  summary: string
  /** Your role in the project */
  role: string
  /** Project dates */
  dates: string
  /** Technologies used */
  tech: string[]
  /** Project status */
  status: string
  /** Hero image path */
  heroImage: string
  /** Repository URL */
  repoUrl?: string | undefined
  /** Live demo URL */
  liveUrl?: string | undefined
  /** Project metrics */
  metrics?: any | undefined
  /** Project screenshots */
  screenshots?: any | undefined
  /** Whether this project should be featured on the home page */
  featured: boolean
  /** Project tags for filtering */
  tags?: string[] | undefined
  /** MDX file body */
  body: MDX
  url: string
}  

/** Nested types */
  

/** Helper types */

export type AllTypes = DocumentTypes | NestedTypes
export type AllTypeNames = DocumentTypeNames | NestedTypeNames

export type DocumentTypes = Project
export type DocumentTypeNames = 'Project'

export type NestedTypes = never
export type NestedTypeNames = never

export type DataExports = {
  allDocuments: DocumentTypes[]
  allProjects: Project[]
}


export interface ContentlayerGenTypes {
  documentTypes: DocumentTypes
  documentTypeMap: DocumentTypeMap
  documentTypeNames: DocumentTypeNames
  nestedTypes: NestedTypes
  nestedTypeMap: NestedTypeMap
  nestedTypeNames: NestedTypeNames
  allTypeNames: AllTypeNames
  dataExports: DataExports
}

declare global {
  interface ContentlayerGen extends ContentlayerGenTypes {}
}

export type DocumentTypeMap = {
  Project: Project
}

export type NestedTypeMap = {

}

 