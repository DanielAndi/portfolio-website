{
  "title": "Phytopi Controlled Environment Platform",
  "slug": "phytopi-controlled-environment",
  "summary": "Autonomous plant growth monitoring system using Raspberry Pi, Flutter apps, Supabase telemetry, and ML-based plant health insights.",
  "role": "Software and ML Lead",
  "dates": "September 2025 – April 2026",
  "tech": [
    "Raspberry Pi 5",
    "Flutter",
    "Supabase",
    "Next.js",
    "TypeScript",
    "TensorFlow Lite",
    "GitHub Actions"
  ],
  "status": "In Development",
  "heroImage": "/images/projects/phytopi-dashboard.jpg",
  "repoUrl": "https://github.com/DanielAndi/PhytoPi",
  "featured": true,
  "body": {
    "raw": "\r\n# Project Overview\r\n\r\n> **🌱 Smart IoT Ecosystem**\r\n> \r\n> PhytoPi is a smart IoT ecosystem designed to automate and monitor plant growth in controlled environments. The system integrates hardware sensors, Raspberry Pi control, cloud data management, and mobile/web applications to deliver real-time environmental insights and plant health analytics.\r\n> \r\n> The project's goal is to autonomously sustain a full bean plant growth cycle while providing users with live monitoring, alerts, and predictive analysis through a unified app interface.\r\n\r\n## 🎯 Key Features\r\n\r\n- **Environmental Monitoring:** Continuous data collection for soil moisture, temperature, humidity, light, and CO₂ sensors\r\n\r\n- **Secure Cloud Infrastructure:** Built on Supabase with Row-Level Security (RLS) for user-specific data isolation\r\n\r\n- **Cross-Platform Dashboard:** Flutter app (Android/iOS/Web) displays real-time readings, charts, and device health\r\n\r\n- **Alert System:** Automated notifications for threshold breaches (e.g., low moisture, high temperature)\r\n\r\n- **Offline-Resilient Device Agent:** Python-based Raspberry Pi agent caches data locally and uploads in batches\r\n\r\n- **AI Integration (Phase 2):** On-device TensorFlow Lite or cloud ML microservice for plant health inference\r\n\r\n- **Kiosk Mode:** Raspberry Pi can display live dashboards using Chromium in kiosk mode for lab or greenhouse use\r\n\r\n- **Monetization-Ready Architecture:** Stripe integration for subscription tiers and device management\r\n\r\n---\r\n\r\n# 🏗️ Technical Architecture\r\n\r\n## 🔧 Hardware Layer\r\n\r\n- **Raspberry Pi 5** + Sensor Array (moisture, temp, humidity, light, CO₂)\r\n\r\n- **Device Agent:** Python + SQLite for local buffering, secure upload to Supabase Edge Functions\r\n\r\n## ☁️ Backend Infrastructure\r\n\r\n- **Supabase:** PostgreSQL, RLS, Edge Functions, Storage, Auth\r\n\r\n- **CI/CD:** GitHub Actions for migrations, tests, and deployment\r\n\r\n## 📱 Frontend Applications\r\n\r\n- **Flutter:** Mobile + Web, realtime charts, user settings, notifications\r\n\r\n- **Kiosk Mode:** Raspberry Pi displays live dashboards using Chromium\r\n\r\n## 🔄 Data Flow\r\n\r\n```\r\nSensors → Pi Agent → Edge Function → Supabase DB → Realtime → Mobile/Web UI\r\n```\r\n\r\n---\r\n\r\n## 📁 Project Structure\r\n\r\n```\r\nphytopi/\r\n├─ apps/            # Flutter mobile + web dashboard clients\r\n├─ services/        # pi-agent, simulator, ml microservice\r\n├─ ml/              # training scripts, datasets, exported TFLite models\r\n├─ infra/           # Supabase migrations, edge functions, Docker assets\r\n├─ packages/        # shared DTOs, domain models, utilities\r\n├─ .github/workflows/# CI/CD pipelines\r\n└─ docs/            # requirements, diagrams, statements of work\r\n```\r\n\r\n# 🎯 Impact & Outcomes\r\n\r\n## ✅ Achievements\r\n\r\n- **Fully functional MVP** achieved within 12 weeks\r\n\r\n- **Cross-platform app** + Raspberry Pi kiosk mode tested with live sensors\r\n\r\n- **Secure, scalable Supabase backend** supporting realtime ingestion and notifications\r\n\r\n- **Architecture ready** for production and future AI health analysis\r\n\r\n## 🌟 Key Highlights\r\n\r\n- **End-to-end IoT system** with device onboarding, telemetry, and visualization\r\n\r\n- **Modular Supabase schema** designed for extensibility and manufacturing integration\r\n\r\n- **Demonstrates strong grasp** of IoT, cloud computing, mobile development, and embedded systems\r\n\r\n- **Deployed internal tests** using CI/CD pipelines and Supabase observability tools\r\n\r\n---\r\n\r\n> **💡 Vision Statement**\r\n> \r\n> PhytoPi represents a comprehensive IoT solution that bridges hardware, cloud infrastructure, and user experience to create an intelligent plant monitoring ecosystem. The project demonstrates expertise across the full technology stack while delivering a production-ready system with clear paths for AI integration and commercial scalability.",
    "code": "var Component=(()=>{var p=Object.create;var l=Object.defineProperty;var u=Object.getOwnPropertyDescriptor;var m=Object.getOwnPropertyNames;var g=Object.getPrototypeOf,b=Object.prototype.hasOwnProperty;var y=(i,e)=>()=>(e||i((e={exports:{}}).exports,e),e.exports),f=(i,e)=>{for(var r in e)l(i,r,{get:e[r],enumerable:!0})},s=(i,e,r,o)=>{if(e&&typeof e==\"object\"||typeof e==\"function\")for(let t of m(e))!b.call(i,t)&&t!==r&&l(i,t,{get:()=>e[t],enumerable:!(o=u(e,t))||o.enumerable});return i};var v=(i,e,r)=>(r=i!=null?p(g(i)):{},s(e||!i||!i.__esModule?l(r,\"default\",{value:i,enumerable:!0}):r,i)),S=i=>s(l({},\"__esModule\",{value:!0}),i);var c=y((k,a)=>{a.exports=_jsx_runtime});var P={};f(P,{default:()=>h,frontmatter:()=>w});var n=v(c()),w={slug:\"phytopi-controlled-environment\",title:\"Phytopi Controlled Environment Platform\",summary:\"Autonomous plant growth monitoring system using Raspberry Pi, Flutter apps, Supabase telemetry, and ML-based plant health insights.\",role:\"Software and ML Lead\",dates:\"September 2025 \\u2013 April 2026\",tech:[\"Raspberry Pi 5\",\"Flutter\",\"Supabase\",\"Next.js\",\"TypeScript\",\"TensorFlow Lite\",\"GitHub Actions\"],status:\"In Development\",heroImage:\"/images/projects/phytopi-dashboard.jpg\",repoUrl:\"https://github.com/DanielAndi/PhytoPi\",featured:!0};function d(i){let e={blockquote:\"blockquote\",code:\"code\",h1:\"h1\",h2:\"h2\",hr:\"hr\",li:\"li\",p:\"p\",pre:\"pre\",strong:\"strong\",ul:\"ul\",...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{children:\"Project Overview\"}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:\"\\u{1F331} Smart IoT Ecosystem\"})}),`\n`,(0,n.jsx)(e.p,{children:\"PhytoPi is a smart IoT ecosystem designed to automate and monitor plant growth in controlled environments. The system integrates hardware sensors, Raspberry Pi control, cloud data management, and mobile/web applications to deliver real-time environmental insights and plant health analytics.\"}),`\n`,(0,n.jsx)(e.p,{children:\"The project's goal is to autonomously sustain a full bean plant growth cycle while providing users with live monitoring, alerts, and predictive analysis through a unified app interface.\"}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u{1F3AF} Key Features\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Environmental Monitoring:\"}),\" Continuous data collection for soil moisture, temperature, humidity, light, and CO\\u2082 sensors\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Secure Cloud Infrastructure:\"}),\" Built on Supabase with Row-Level Security (RLS) for user-specific data isolation\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Cross-Platform Dashboard:\"}),\" Flutter app (Android/iOS/Web) displays real-time readings, charts, and device health\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Alert System:\"}),\" Automated notifications for threshold breaches (e.g., low moisture, high temperature)\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Offline-Resilient Device Agent:\"}),\" Python-based Raspberry Pi agent caches data locally and uploads in batches\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"AI Integration (Phase 2):\"}),\" On-device TensorFlow Lite or cloud ML microservice for plant health inference\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Kiosk Mode:\"}),\" Raspberry Pi can display live dashboards using Chromium in kiosk mode for lab or greenhouse use\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Monetization-Ready Architecture:\"}),\" Stripe integration for subscription tiers and device management\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h1,{children:\"\\u{1F3D7}\\uFE0F Technical Architecture\"}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u{1F527} Hardware Layer\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Raspberry Pi 5\"}),\" + Sensor Array (moisture, temp, humidity, light, CO\\u2082)\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Device Agent:\"}),\" Python + SQLite for local buffering, secure upload to Supabase Edge Functions\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u2601\\uFE0F Backend Infrastructure\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Supabase:\"}),\" PostgreSQL, RLS, Edge Functions, Storage, Auth\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"CI/CD:\"}),\" GitHub Actions for migrations, tests, and deployment\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u{1F4F1} Frontend Applications\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Flutter:\"}),\" Mobile + Web, realtime charts, user settings, notifications\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Kiosk Mode:\"}),\" Raspberry Pi displays live dashboards using Chromium\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u{1F504} Data Flow\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`Sensors \\u2192 Pi Agent \\u2192 Edge Function \\u2192 Supabase DB \\u2192 Realtime \\u2192 Mobile/Web UI\n`})}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u{1F4C1} Project Structure\"}),`\n`,(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:`phytopi/\\r\n\\u251C\\u2500 apps/            # Flutter mobile + web dashboard clients\\r\n\\u251C\\u2500 services/        # pi-agent, simulator, ml microservice\\r\n\\u251C\\u2500 ml/              # training scripts, datasets, exported TFLite models\\r\n\\u251C\\u2500 infra/           # Supabase migrations, edge functions, Docker assets\\r\n\\u251C\\u2500 packages/        # shared DTOs, domain models, utilities\\r\n\\u251C\\u2500 .github/workflows/# CI/CD pipelines\\r\n\\u2514\\u2500 docs/            # requirements, diagrams, statements of work\n`})}),`\n`,(0,n.jsx)(e.h1,{children:\"\\u{1F3AF} Impact & Outcomes\"}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u2705 Achievements\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Fully functional MVP\"}),\" achieved within 12 weeks\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Cross-platform app\"}),\" + Raspberry Pi kiosk mode tested with live sensors\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Secure, scalable Supabase backend\"}),\" supporting realtime ingestion and notifications\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Architecture ready\"}),\" for production and future AI health analysis\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.h2,{children:\"\\u{1F31F} Key Highlights\"}),`\n`,(0,n.jsxs)(e.ul,{children:[`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"End-to-end IoT system\"}),\" with device onboarding, telemetry, and visualization\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Modular Supabase schema\"}),\" designed for extensibility and manufacturing integration\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Demonstrates strong grasp\"}),\" of IoT, cloud computing, mobile development, and embedded systems\"]}),`\n`]}),`\n`,(0,n.jsxs)(e.li,{children:[`\n`,(0,n.jsxs)(e.p,{children:[(0,n.jsx)(e.strong,{children:\"Deployed internal tests\"}),\" using CI/CD pipelines and Supabase observability tools\"]}),`\n`]}),`\n`]}),`\n`,(0,n.jsx)(e.hr,{}),`\n`,(0,n.jsxs)(e.blockquote,{children:[`\n`,(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:\"\\u{1F4A1} Vision Statement\"})}),`\n`,(0,n.jsx)(e.p,{children:\"PhytoPi represents a comprehensive IoT solution that bridges hardware, cloud infrastructure, and user experience to create an intelligent plant monitoring ecosystem. The project demonstrates expertise across the full technology stack while delivering a production-ready system with clear paths for AI integration and commercial scalability.\"}),`\n`]})]})}function h(i={}){let{wrapper:e}=i.components||{};return e?(0,n.jsx)(e,{...i,children:(0,n.jsx)(d,{...i})}):d(i)}return S(P);})();\n;return Component;"
  },
  "_id": "projects/phytopi-controlled-environment.mdx",
  "_raw": {
    "sourceFilePath": "projects/phytopi-controlled-environment.mdx",
    "sourceFileName": "phytopi-controlled-environment.mdx",
    "sourceFileDir": "projects",
    "contentType": "mdx",
    "flattenedPath": "projects/phytopi-controlled-environment"
  },
  "type": "Project",
  "url": "/projects/phytopi-controlled-environment"
}