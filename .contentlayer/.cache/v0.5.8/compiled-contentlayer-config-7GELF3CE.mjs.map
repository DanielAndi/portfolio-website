{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer2/source-files'\n\nexport const Project = defineDocumentType(() => ({\n  name: 'Project',\n  filePathPattern: `projects/**/*.mdx`,\n  contentType: 'mdx',\n  fields: {\n    title: {\n      type: 'string',\n      description: 'The title of the project',\n      required: true,\n    },\n    slug: {\n      type: 'string',\n      description: 'The slug of the project',\n      required: true,\n    },\n    summary: {\n      type: 'string',\n      description: 'A brief summary of the project',\n      required: true,\n    },\n    role: {\n      type: 'string',\n      description: 'Your role in the project',\n      required: true,\n    },\n    dates: {\n      type: 'string',\n      description: 'Project dates',\n      required: true,\n    },\n    tech: {\n      type: 'list',\n      of: { type: 'string' },\n      description: 'Technologies used',\n      required: true,\n    },\n    status: {\n      type: 'string',\n      description: 'Project status',\n      required: true,\n    },\n    heroImage: {\n      type: 'string',\n      description: 'Hero image path',\n      required: true,\n    },\n    repoUrl: {\n      type: 'string',\n      description: 'Repository URL',\n      required: false,\n    },\n    liveUrl: {\n      type: 'string',\n      description: 'Live demo URL',\n      required: false,\n    },\n    metrics: {\n      type: 'json',\n      description: 'Project metrics',\n      required: false,\n    },\n    screenshots: {\n      type: 'json',\n      description: 'Project screenshots',\n      required: false,\n    },\n    featured: {\n      type: 'boolean',\n      description: 'Whether this project should be featured on the home page',\n      required: false,\n      default: false,\n    },\n    tags: {\n      type: 'list',\n      of: { type: 'string' },\n      description: 'Project tags for filtering',\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: 'string',\n      resolve: (project) => `/projects/${project.slug}`,\n    },\n  },\n}))\n\nexport default makeSource({\n  contentDirPath: './content',\n  documentTypes: [Project],\n  disableImportAliasWarning: true,\n  date: {\n    timezone: 'UTC',\n  },\n})\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,YAAY,aAAa,QAAQ,IAAI;AAAA,IACjD;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AAAA,EACvB,2BAA2B;AAAA,EAC3B,MAAM;AAAA,IACJ,UAAU;AAAA,EACZ;AACF,CAAC;",
  "names": []
}
