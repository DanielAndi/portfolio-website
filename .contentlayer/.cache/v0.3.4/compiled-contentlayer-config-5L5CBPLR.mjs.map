{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from 'contentlayer2/source-files'\r\n\r\nexport const Project = defineDocumentType(() => ({\r\n  name: 'Project',\r\n  filePathPattern: `projects/**/*.mdx`,\r\n  contentType: 'mdx',\r\n  fields: {\r\n    title: {\r\n      type: 'string',\r\n      description: 'The title of the project',\r\n      required: true,\r\n    },\r\n    slug: {\r\n      type: 'string',\r\n      description: 'The slug of the project',\r\n      required: true,\r\n    },\r\n    summary: {\r\n      type: 'string',\r\n      description: 'A brief summary of the project',\r\n      required: true,\r\n    },\r\n    role: {\r\n      type: 'string',\r\n      description: 'Your role in the project',\r\n      required: true,\r\n    },\r\n    dates: {\r\n      type: 'string',\r\n      description: 'Project dates',\r\n      required: true,\r\n    },\r\n    tech: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      description: 'Technologies used',\r\n      required: true,\r\n    },\r\n    status: {\r\n      type: 'string',\r\n      description: 'Project status',\r\n      required: true,\r\n    },\r\n    heroImage: {\r\n      type: 'string',\r\n      description: 'Hero image path',\r\n      required: true,\r\n    },\r\n    repoUrl: {\r\n      type: 'string',\r\n      description: 'Repository URL',\r\n      required: false,\r\n    },\r\n    liveUrl: {\r\n      type: 'string',\r\n      description: 'Live demo URL',\r\n      required: false,\r\n    },\r\n    metrics: {\r\n      type: 'list',\r\n      of: {\r\n        type: 'object',\r\n        fields: {\r\n          label: { type: 'string', required: true },\r\n          value: { type: 'string', required: true },\r\n        },\r\n      },\r\n      description: 'Project metrics',\r\n      required: false,\r\n    },\r\n    screenshots: {\r\n      type: 'list',\r\n      of: {\r\n        type: 'object',\r\n        fields: {\r\n          src: { type: 'string', required: true },\r\n          alt: { type: 'string', required: true },\r\n          caption: { type: 'string', required: false },\r\n        },\r\n      },\r\n      description: 'Project screenshots',\r\n      required: false,\r\n    },\r\n    featured: {\r\n      type: 'boolean',\r\n      description: 'Whether this project should be featured on the home page',\r\n      required: false,\r\n      default: false,\r\n    },\r\n    tags: {\r\n      type: 'list',\r\n      of: { type: 'string' },\r\n      description: 'Project tags for filtering',\r\n      required: false,\r\n    },\r\n  },\r\n  computedFields: {\r\n    url: {\r\n      type: 'string',\r\n      resolve: (project) => `/projects/${project.slug}`,\r\n    },\r\n  },\r\n}))\r\n\r\nexport default makeSource({\r\n  contentDirPath: './content',\r\n  documentTypes: [Project],\r\n})\r\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAExC,IAAM,UAAU,mBAAmB,OAAO;AAAA,EAC/C,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,QAAQ;AAAA,MACN,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,WAAW;AAAA,MACT,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,SAAS;AAAA,MACP,MAAM;AAAA,MACN,IAAI;AAAA,QACF,MAAM;AAAA,QACN,QAAQ;AAAA,UACN,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,UACxC,OAAO,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,QAC1C;AAAA,MACF;AAAA,MACA,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,IAAI;AAAA,QACF,MAAM;AAAA,QACN,QAAQ;AAAA,UACN,KAAK,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,UACtC,KAAK,EAAE,MAAM,UAAU,UAAU,KAAK;AAAA,UACtC,SAAS,EAAE,MAAM,UAAU,UAAU,MAAM;AAAA,QAC7C;AAAA,MACF;AAAA,MACA,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,UAAU;AAAA,MACR,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,MACV,SAAS;AAAA,IACX;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,YAAY,aAAa,QAAQ,IAAI;AAAA,IACjD;AAAA,EACF;AACF,EAAE;AAEF,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,OAAO;AACzB,CAAC;",
  "names": []
}
